
@using Omu.Awem.Helpers
@using Omu.AwesomeMvc
@using OMII.Utils
@model OMI.Models.cSolicitud

@{
    ViewBag.Title = "NuevaSolcitud";
}
@Html.AntiForgeryToken()

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-border panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">Ingenieria Aplicada OnePro</h3>
            </div>
            <div class="panel-body">
              
               
                <div class="container">

                    <div class="row">

                        <div class="col-md-8">
                            <div class="menubar-logo" id="titulo">


                                <span class="container">



                                    <h1>@Html.DisplayFor(m => m.TbSol.TbFormato.Descripcion)</h1>
                                </span>

                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="panel panel-default" id="panel_ovi">

                                <div class="panel-body">
                                    <div class="input-group ">
                                        <span class="input-group-addon" id="sizing-addon4">Folio</span>
                                        <input type="text" class="form-control" name="Folio" placeholder="Username" aria-describedby="sizing-addon1" value="@Html.DisplayFor(m => m.TbSol.Folio)" style="text-align: right; color: red" readonly="true">
                                    </div>

                                    <ul class="list-group">
                                        <li class="list-group-item"><h6>No. Formato:@Html.DisplayFor(m => m.TbSol.TbFormato.Nombre)</h6></li>
                                        <li class="list-group-item"><h6>Revisión: @Html.DisplayFor(m => m.TbSol.TbFormato.Revision)</h6></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="container">
                    <div class="row">
                        <div class="panel panel-default" id="panel_ovi">

                            <div class="panel-body">
                                <ul class="list-group">
                                    <li class="list-group-item"><h6>Area Solicitante: <span style="color: red;"><strong> @Html.DisplayFor(m => m.TbSol.TbUsuario.TbArea.Nombre)</strong></span></h6></li>
                                    <li class="list-group-item"><h6>Usuario:<span style="color: red"><strong> @Html.DisplayFor(m => m.TbSol.TbUsuario.Nombre)</strong></span></h6></li>
                                    <li class="list-group-item"><h6>Fecha:<span style="color: red"><strong> @Html.DisplayFor(m => m.FechaCorta)</strong></span></h6></li>

                                </ul>
                            </div>
                        </div>
                            
                           

                        @Html.InitCrudPopupsForGrid("DinnersGrid", "Infraestructura")
                        @* popup names will be action + gridid; name is used when calling awe.open(name) *@
                       
                        @if(Model.TbSol.EnviadoCom==0)
                        { 
                            @(Html.Awe().Grid("DinnersGrid")
                                  .Mod(o => o.PageInfo().ColumnsSelector().ColumnsAutohide())
                                  .Url(Url.Action("GridGetItems", "Infraestructura"))
                                  .Resizable()
                                  .Reorderable()
                                  .Height(700)
                                  .Paging(false)
                                  .Groupable(false)

                                  .Columns(
                                      new Column {Name = "Id", Width = 55, Hidden = true},
                                      new Column {Name = "Categoria", ClientFormat = ".Categoria", Header = "Categoria"},

                                      new Column {Name = "Cantidad"},
                                      new Column {Name = "Unidad"},
                                      new Column {Name = "Descripcion"}.Mod(o => o.Nohide()),
                                      new Column {Name = "IdSupervisor", Header = "Autoriza"},
                                      new Column {Name = "Estatus"},
                                      new Column {Name ="Autorizacion",ClientFormat = GridUtils.EditFormatForGrid("DinnersGrid")}.Mod(o => o.Nohide())))
                        }
                        else{
                        @(Html.Awe().Grid("DinnersGrid")
                              .Mod(o => o.PageInfo().ColumnsSelector().ColumnsAutohide())
                              .Url(Url.Action("GridGetItems", "Infraestructura"))
                              .Resizable()
                              .Reorderable()
                              .Height(700)
                              .Paging(false)
                              .Groupable(false)

                              .Columns(
                                  new Column {Name = "Id", Width = 55, Hidden = true},
                                  new Column {Name = "Categoria", ClientFormat = ".Categoria", Header = "Categoria"},

                                  new Column {Name = "Cantidad"},
                                  new Column {Name = "Unidad"},
                                  new Column {Name = "Descripcion"}.Mod(o => o.Nohide()),
                                  new Column {Name = "IdSupervisor", Header = "Autoriza"},
                                  new Column {Name = "Estatus"},
                                  new Column {Name ="Autorizacion",ClientFormat = GridUtils.EditFormatForGrid("DinnersGrid")}.Mod(o => o.Nohide())))
                        }

                        <br/>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10 " style="align-items: right;">
                               
                            @using (Html.BeginForm("Enviar", "Infraestructura", FormMethod.Post, new { @class = "normalPost" }))
                            {
                                if (ViewBag.Visible != 1)
                                {
                                    <a class="btn btn-danger" id="btnCancelar" href="@Url.Action("Cancelar", "Solicitud")">Cancelar</a>
                                    @*  <input type="submit" value="Guardar" id="btnSave" class="btn btn-primary"/><a class="btn btn-success" id="btnCancelar" href="@Url.Action("Enviar", "Solicitud")">Enviar</a>*@
                                    <a class="btn btn-primary" id="btnSave" href="@Url.Action("Guadar", "Solicitud")">Guardar</a>

                                    <button type="submit" class="btn btn-success">Enviar</button>
                                }
                            }
                            @(Html.Awe().Form()
                                  .UseAjax(false)
                                  .Confirm(true)
                                  .FormClass("normalPost")
                                      
                                  .ConfirmOptions(o => {o.Message="Esta seguro de enviar esta Solicitud";
                                                           o.Title = "Confirmar envio";
                                                           o.YesText = "Enviar";
                                                           o.NoText = "Cancelar";

                                  })
                                  .Tag(new { target = "confirmCont" }))
                            <div id="confirmCont"></div>

                                
                           
                        </div>
                    </div>
                </div>
                
    
            </div>
        </div>
    </div>
</div>
@section Scripts
{

    <script type="text/javascript">
        //custom checkbox using bootstrap-toggle plugin (http://www.bootstraptoggle.com)
        $(function () {
            $('#DinnersGrid').on('awerender', function () {
                $(this).find(".checkbox-toggle").bootstrapToggle();
            });
        });

        var toggleButton = function (model, prop) {
            var checked = model[prop] ? 'checked = "checked"' : '';
            return '<input type="checkbox" ' + checked + ' class="checkbox-toggle" data-toggle="toggle" data-on="Yes" data-off="No" data-size="small">';
        };

        function formatPrice(lunch, prop) {
            var color = 'maroon';
            var estado = lunch[prop];
            if (estado =='Autorizado') color = 'green';
            if (estado =='Rechazado') color = 'red';
            return "<div style='color:" + color + ";text-width:bold;'>" + estado + " </div>";
        }

        function useTemplate(id) {
            return function (model) {
                var str = $('#' + id).html();
                for (var name in model) {
                    str = str.replace("." + name, model[name]);
                }
                return str;
            };
        }
    </script>
    <style>
        .maro {
            color: maroon;
        }
    </style>
    <div id="template1" style="display: none">
        .Person spent .Price £
    </div>
    <link href="https://gitcdn.github.io/bootstrap-toggle/2.2.0/css/bootstrap-toggle.min.css" rel="stylesheet">
    <script src="https://gitcdn.github.io/bootstrap-toggle/2.2.0/js/bootstrap-toggle.min.js"></script>

}




