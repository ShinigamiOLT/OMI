@using Omu.Awem.Helpers
@using Omu.AwesomeMvc
@using OMII.Utils
@model OMI.Models.cSolicitud

@{
    ViewBag.Title = "NuevaSolcitud";
}



<div class="row">
<div class="col-md-12">
<div class="panel panel-border panel-primary">
<div class="panel-heading">
    <h3 class="panel-title">TITULO APP</h3>
</div>
<div class="panel-body">
@Html.AntiForgeryToken()
@using (@Html.BeginForm("NuevaSolicitud", "Solicitud", FormMethod.Post))
{
    <div class="container">

        <div class="row">

            <div class="col-md-8">
                <div class="menubar-logo" id="titulo">


                    <span class="container">
                        <h3>Ingenieria Aplicada OnePro</h3><br>


                        <h1>@Html.DisplayFor(m=>m.TbSol.TbFormato.Descripcion)</h1>
                    </span>

                </div>
            </div>
            <div class="col-md-4">
                <div class="panel panel-default" id="panel_ovi">

                    <div class="panel-body">
                        <div class="input-group ">
                            <span class="input-group-addon" id="sizing-addon4">Folio</span>
                            <input type="text" class="form-control" name="Folio" placeholder="Username" aria-describedby="sizing-addon1" value="@Html.DisplayFor(m=>m.Folio)" style="text-align: right; color: red" readonly="true">
                        </div>

                        <ul class="list-group">
                            <li class="list-group-item"><h6>No. Formato:@Html.DisplayFor(m => m.TbSol.TbFormato.Nombre)</h6></li>
                            <li class="list-group-item"><h6>Revisión: @Html.DisplayFor(m=>m.TbSol.TbFormato.Revision)</h6></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="panel panel-default" id="panel_ovi">

                <div class="panel-body">
                    <ul class="list-group">
                        <li class="list-group-item"><h6>Area Solicitante <span style="color: red;"><strong> @Html.DisplayFor(m => m.TbSol.TbUsuario.TbArea.Nombre)</strong></span></h6></li>
                        <li class="list-group-item"><h6>Usuario:<span style="color:red"><strong> @Html.DisplayFor(m => m.TbSol.TbUsuario.Nombre)</strong></span></h6></li>
                        <li class="list-group-item"><h6>Fecha:<span style="color:red"><strong> @Html.DisplayFor(m => m.FechaCorta)</strong></span></h6></li>
                 
                    </ul>
                </div>
            </div>
            
            @Html.InitCrudPopupsForGrid("DinnersGrid", "Solicitud")
            @* popup names will be action + gridid; name is used when calling awe.open(name) *@

            <div class="bar">
                <button type="button" onclick="awe.open('createDinnersGrid')" class="awe-btn mbtn">Nuevo Pedido</button>
            </div>

            @(Html.Awe().Grid("DinnersGrid")
                  .Mod(o => o.PageInfo().ColumnsSelector().ColumnsAutohide())
                  .Url(Url.Action("GridGetItems", "Solicitud"))
                  .Resizable()
                  .Reorderable()
                  .Height(350)
                  .Paging(false)
                  .Groupable(false)
                 
                  .Columns(
                      new Column{Name = "Id", Width = 55,Hidden = true},
                      new Column{Name="Categoria", ClientFormat = ".Categoria", Header = "Categoria"},

                      new Column { Name = "Cantidad" },
                      new Column {Name = "Unidad"},
                      new Column{Name = "Descripcion"}.Mod(o => o.Nohide()),
                      new Column { Name = "IdSupervisor", Header  ="Autoriza"},
                      new Column { Name = "Estatus"},
                     
                      /*new Column{Name = "Date"},
                      new Column{Name = "Chef.FirstName,Chef.LastName", ClientFormat = ".ChefName", Header = "Chef"},
                      new Column{ClientFormat = ".Meals", Header = "Meals"},*/
                      new Column {ClientFormat = GridUtils.EditFormatForGrid("DinnersGrid"), Width = 50}.Mod(o => o.Nohide()),
                      new Column{ClientFormat = GridUtils.DeleteFormatForGrid("DinnersGrid"), Width = 50}.Mod(o => o.Nohide())))
            <br/>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 " style="align-items: right;">
                <a class="btn btn-danger" id="btnCancelar" href="@Url.Action("Cancelar", "Solicitud")">Cancelar</a>
                <input type="submit" value="Guardar" id="btnSave" class="btn btn-primary"/>

                <a class="btn btn-success" id="btnCancelar" href="@Url.Action("Enviar", "Solicitud")">Enviar</a>

            </div>
        </div>
    </div>
}
    
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    
    $(document).ready(function () {
        
        $("#btnSave").click(function () {
            
            var form = $(this).parent("form");
            
            form.attr('action', '<%= Url.RouteUrl(new { Controller = "Solicitud", Action = "NuevaSolicitud" }) %>');
            
            form.attr('method', 'post');
            
        });
        
 
        
        $("#btnCancelar").click(function () {
            
            var form = $(this).parent("form");
            
            form.attr('action', '<%= Url.RouteUrl(new { Controller = "Solicitud", Action = "Cancelar" }) %>');
            
            form.attr('method', 'get');
            
        });
        
    });
   
</script>




